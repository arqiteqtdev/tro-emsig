{"remainingRequest":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js!/Users/arqnet/Desktop/tro-emsig/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/arqnet/Desktop/tro-emsig/src/db/main-fields.js","dependencies":[{"path":"/Users/arqnet/Desktop/tro-emsig/src/db/main-fields.js","mtime":1566455821000},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js","mtime":1615147414521},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1615147417039}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubWFwIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYXJxbmV0L0Rlc2t0b3AvdHJvLWVtc2lnL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvYXJxbmV0L0Rlc2t0b3AvdHJvLWVtc2lnL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmltcG9ydCB7IGd1aWQgfSBmcm9tICIuLi91dGlsL2hlbHBlcnMiOwp2YXIgZmllbGRzID0gewogIGJhc2ljOiBbXQp9OwoKZnVuY3Rpb24gc2VlZCgpIHsKICB2YXIgYmFzaWMgPSBbewogICAgbmFtZTogJ0Z1bGwgbmFtZScsCiAgICB0eXBlOiAndGV4dCcsCiAgICB2YWx1ZTogJycKICB9LCB7CiAgICBuYW1lOiAnSm9iIHRpdGxlJywKICAgIHR5cGU6ICd0ZXh0JywKICAgIHZhbHVlOiAnJwogIH0sIHsKICAgIG5hbWU6ICdDb21wYW55JywKICAgIHR5cGU6ICd0ZXh0JywKICAgIHZhbHVlOiAnJwogIH0sIHsKICAgIG5hbWU6ICdXZWJzaXRlJywKICAgIHR5cGU6ICdsaW5rJywKICAgIHZhbHVlOiAnJwogIH0sIHsKICAgIG5hbWU6ICdFbWFpbCcsCiAgICB0eXBlOiAnZW1haWwnLAogICAgdmFsdWU6ICcnCiAgfSwgewogICAgbmFtZTogJ1Bob25lJywKICAgIHR5cGU6ICd0ZXh0JywKICAgIHZhbHVlOiAnJwogIH1dOwogIGJhc2ljLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgIGZpZWxkcy5iYXNpYy5wdXNoKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHt9LCB7CiAgICAgIGlkOiBndWlkKCkKICAgIH0pKTsKICB9KTsKICBhZGRQbGFjZWhvbGRlcigpOwp9CgpmdW5jdGlvbiBhZGRQbGFjZWhvbGRlcigpIHsKICB2YXIgcGxhY2Vob2xkZXJzID0gWydKb2huIERvZScsICdGcm9udGVuZCBkZXZlbG9wZXInLCAnSm9obkRvZSBMTEMnLCAnam9obmRvZS5jb20nLCAnbWFpbEBqb25oZG9lLmNvbScsICcrIDEgMTIzIDQ1NiA3ODkwJ107CiAgZmllbGRzLmJhc2ljUGxhY2Vob2xkZXIgPSBfdG9Db25zdW1hYmxlQXJyYXkoZmllbGRzLmJhc2ljLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICB2YWx1ZTogcGxhY2Vob2xkZXJzW2luZGV4XQogICAgfSk7CiAgfSkpOwp9CgpzZWVkKCk7CmV4cG9ydCBkZWZhdWx0IGZpZWxkczs="},{"version":3,"sources":["/Users/arqnet/Desktop/tro-emsig/src/db/main-fields.js"],"names":["guid","fields","basic","seed","name","type","value","forEach","item","push","id","addPlaceholder","placeholders","basicPlaceholder","map","index"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AADM,CAAf;;AAIA,SAASC,IAAT,GAAiB;AACf,MAAMD,KAAK,GAAG,CACZ;AAAEE,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,MAA3B;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GADY,EAEZ;AAAEF,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,MAA3B;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAFY,EAGZ;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,MAAzB;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAHY,EAIZ;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,MAAzB;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAJY,EAKZ;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE,OAAvB;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GALY,EAMZ;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE,MAAvB;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GANY,CAAd;AASAJ,EAAAA,KAAK,CAACK,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpBP,IAAAA,MAAM,CAACC,KAAP,CAAaO,IAAb,iCAAuBD,IAAvB;AAA6BE,MAAAA,EAAE,EAAEV,IAAI;AAArC;AACD,GAFD;AAIAW,EAAAA,cAAc;AACf;;AAED,SAASA,cAAT,GAA2B;AACzB,MAAMC,YAAY,GAAG,CACnB,UADmB,EAEnB,oBAFmB,EAGnB,aAHmB,EAInB,aAJmB,EAKnB,kBALmB,EAMnB,kBANmB,CAArB;AASAX,EAAAA,MAAM,CAACY,gBAAP,sBACKZ,MAAM,CAACC,KAAP,CAAaY,GAAb,CAAiB,UAACN,IAAD,EAAOO,KAAP,EAAiB;AACnC,2CAAYP,IAAZ;AAAkBF,MAAAA,KAAK,EAAEM,YAAY,CAACG,KAAD;AAArC;AACD,GAFE,CADL;AAKD;;AAEDZ,IAAI;AAEJ,eAAeF,MAAf","sourcesContent":["import { guid } from '../util/helpers'\n\nconst fields = {\n  basic: []\n}\n\nfunction seed () {\n  const basic = [\n    { name: 'Full name', type: 'text', value: '' },\n    { name: 'Job title', type: 'text', value: '' },\n    { name: 'Company', type: 'text', value: '' },\n    { name: 'Website', type: 'link', value: '' },\n    { name: 'Email', type: 'email', value: '' },\n    { name: 'Phone', type: 'text', value: '' }\n  ]\n\n  basic.forEach(item => {\n    fields.basic.push({ ...item, id: guid() })\n  })\n\n  addPlaceholder()\n}\n\nfunction addPlaceholder () {\n  const placeholders = [\n    'John Doe',\n    'Frontend developer',\n    'JohnDoe LLC',\n    'johndoe.com',\n    'mail@jonhdoe.com',\n    '+ 1 123 456 7890'\n  ]\n\n  fields.basicPlaceholder = [\n    ...fields.basic.map((item, index) => {\n      return { ...item, value: placeholders[index] }\n    })\n  ]\n}\n\nseed()\n\nexport default fields\n"]}]}