{"remainingRequest":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js!/Users/arqnet/Desktop/tro-emsig/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/arqnet/Desktop/tro-emsig/src/db/indexedDB.js","dependencies":[{"path":"/Users/arqnet/Desktop/tro-emsig/src/db/indexedDB.js","mtime":1566455821000},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js","mtime":1615147414521},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1615147417039}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9hcnFuZXQvRGVza3RvcC90cm8tZW1zaWcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKdmFyIGRibmFtZSA9ICdteXNpZ21haWwnOwp2YXIgdmVyc2lvbiA9IDE7CnZhciBkYiA9ICcnOwp2YXIgcmVxdWVzdCA9ICcnOwp2YXIgc3RvcmUgPSAnJzsKdmFyIHR4ID0gJyc7Ci8qKgogKiBPcGVuIERCCiAqLwoKZnVuY3Rpb24gb3BlbkRCKCkgewogIGlmICghd2luZG93LmluZGV4ZWREQikgewogICAgd2luZG93LmFsZXJ0KCdCcm93c2VyIG5vdCBzdXBwb3J0IEluZGV4ZWREQicpOwogICAgdGhyb3cgbmV3IEVycm9yKCdCcm93c2VyIG5vdCBzdXBwb3J0IEluZGV4ZWREQicpOwogIH0KCiAgcmVxdWVzdCA9IHdpbmRvdy5pbmRleGVkREIub3BlbihkYm5hbWUsIHZlcnNpb24pOwoKICByZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9IGZ1bmN0aW9uIChlKSB7CiAgICBkYiA9IGUudGFyZ2V0LnJlc3VsdDsKICAgIHN0b3JlID0gZGIuY3JlYXRlT2JqZWN0U3RvcmUoJ3N0b3JlJywgewogICAgICBrZXlQYXRoOiAnaWQnCiAgICB9KTsKICB9OwoKICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoZSkgewogICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgZGF0YWJhc2UgaXMgb3BlbmVkIGZhaWxlZCcpOyAvLyBjb25zb2xlLndhcm4oJ1RoZSBkYXRhYmFzZSBpcyBvcGVuZWQgZmFpbGVkJykKICB9Owp9Ci8qKgogKiBQcm9taXNpZnkgb25zdWNjZXNzIGhhbmRsZXIgb2YgaW5kZXhlZERCCiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNiIC0gY2FsbGJhY2sgUHJvbWlzZS5yZXNvbHZlKCkKICogQHJldHVybnMge1Byb21pc2V9IFByb21pc2UKICovCgoKZnVuY3Rpb24gb25TdWNjZXNzKGNiKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIHJlcXVlc3Qub25zdWNjZXNzID0gZnVuY3Rpb24gKGUpIHsKICAgICAgZGIgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgIHR4ID0gZGIudHJhbnNhY3Rpb24oJ3N0b3JlJywgJ3JlYWR3cml0ZScpOwogICAgICBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCdzdG9yZScpOwoKICAgICAgZGIub25lcnJvciA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlKSk7CiAgICAgIH07CgogICAgICBjYihyZXNvbHZlKTsKCiAgICAgIHR4Lm9uY29tcGxldGUgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBkYi5jbG9zZSgpOwogICAgICB9OwogICAgfTsKICB9KTsKfQovKioKICogU2F2ZSBwcm9qZWN0CiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIC0gcHJvamVjdCBkYXRhCiAqIEBwYXJhbSB7Ym9vbGVhbn0gYXNDdXJyZW50IC0gc2F2ZSBwcm9qZWN0IGFzIGN1cnJlbnQsIHNldCBuZXcgcmVjb3JkIGluIERCCiAqIHdpdGggJ2N1cnJlbnRQcm9qZWN0JyBrZXkKICogQHJldHVybnMge1Byb21pc2V9IFByb21pc2UKICovCgoKZXhwb3J0IGZ1bmN0aW9uIHNhdmVQcm9qZWN0KGRhdGEsIGFzQ3VycmVudCkgewogIG9wZW5EQigpOwogIHJldHVybiBvblN1Y2Nlc3MoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIGlmICghYXNDdXJyZW50KSB7CiAgICAgIGRhdGEgPSBfb2JqZWN0U3ByZWFkKHsKICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCksCiAgICAgICAgbmFtZTogJ1VudGl0bGVkIHByb2plY3QnCiAgICAgIH0sIGRhdGEpOwogICAgfQoKICAgIHZhciBzYXZlID0gc3RvcmUucHV0KGRhdGEpOwoKICAgIHNhdmUub25zdWNjZXNzID0gZnVuY3Rpb24gKGUpIHsKICAgICAgcmVzb2x2ZShlKTsKICAgIH07CiAgfSk7Cn0KLyoqCiAqIFVwZGF0ZSBwcm9qZWN0CiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIC0gcHJvamVjdCBkYXRhCiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVByb2plY3RCeUlkKGRhdGEpIHsKICBvcGVuREIoKTsKICByZXR1cm4gb25TdWNjZXNzKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICB2YXIgc2F2ZSA9IHN0b3JlLnB1dChkYXRhKTsKCiAgICBzYXZlLm9uc3VjY2VzcyA9IGZ1bmN0aW9uIChlKSB7CiAgICAgIHJlc29sdmUoZSk7CiAgICB9OwogIH0pOwp9Ci8qKgogKiBHZXQgYWxsIHByb2plY3RzCiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlIGFycmF5IG9mIHByb2plY3RzCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldEFsbFByb2plY3RzKCkgewogIG9wZW5EQigpOwogIHJldHVybiBvblN1Y2Nlc3MoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIHZhciBxdWVyeSA9IHN0b3JlLmdldEFsbCgpOwoKICAgIHF1ZXJ5Lm9uc3VjY2VzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmVzb2x2ZShxdWVyeS5yZXN1bHQpOwogICAgfTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0UHJvamVjdEJ5SWQoaWQpIHsKICBvcGVuREIoKTsKICByZXR1cm4gb25TdWNjZXNzKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICB2YXIgcXVlcnkgPSBzdG9yZS5nZXQoaWQpOwoKICAgIHF1ZXJ5Lm9uc3VjY2VzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmVzb2x2ZShxdWVyeS5yZXN1bHQpOwogICAgfTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gZGVsZXRlUHJvamVjdEJ5SWQoaWQpIHsKICBvcGVuREIoKTsKICByZXR1cm4gb25TdWNjZXNzKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICB2YXIgcXVlcnkgPSBzdG9yZS5kZWxldGUoaWQpOwoKICAgIHF1ZXJ5Lm9uc3VjY2VzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmVzb2x2ZShxdWVyeS5yZXN1bHQpOwogICAgfTsKICB9KTsKfQ=="},{"version":3,"sources":["/Users/arqnet/Desktop/tro-emsig/src/db/indexedDB.js"],"names":["dbname","version","db","request","store","tx","openDB","window","indexedDB","alert","Error","open","onupgradeneeded","e","target","result","createObjectStore","keyPath","onerror","onSuccess","cb","Promise","resolve","reject","onsuccess","transaction","objectStore","oncomplete","close","saveProject","data","asCurrent","id","Date","getTime","name","save","put","updateProjectById","getAllProjects","query","getAll","getProjectById","get","deleteProjectById","delete"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAG,WAAf;AACA,IAAMC,OAAO,GAAG,CAAhB;AACA,IAAIC,EAAE,GAAG,EAAT;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,EAAE,GAAG,EAAT;AAEA;AACA;AACA;;AACA,SAASC,MAAT,GAAmB;AACjB,MAAI,CAACC,MAAM,CAACC,SAAZ,EAAuB;AACrBD,IAAAA,MAAM,CAACE,KAAP,CAAa,+BAAb;AACA,UAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAEDP,EAAAA,OAAO,GAAGI,MAAM,CAACC,SAAP,CAAiBG,IAAjB,CAAsBX,MAAtB,EAA8BC,OAA9B,CAAV;;AAEAE,EAAAA,OAAO,CAACS,eAAR,GAA0B,UAAAC,CAAC,EAAI;AAC7BX,IAAAA,EAAE,GAAGW,CAAC,CAACC,MAAF,CAASC,MAAd;AACAX,IAAAA,KAAK,GAAGF,EAAE,CAACc,iBAAH,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA9B,CAAR;AACD,GAHD;;AAKAd,EAAAA,OAAO,CAACe,OAAR,GAAkB,UAAAL,CAAC,EAAI;AACrB,UAAM,IAAIH,KAAJ,CAAU,+BAAV,CAAN,CADqB,CAErB;AACD,GAHD;AAID;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASS,SAAT,CAAoBC,EAApB,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCpB,IAAAA,OAAO,CAACqB,SAAR,GAAoB,UAAAX,CAAC,EAAI;AACvBX,MAAAA,EAAE,GAAGW,CAAC,CAACC,MAAF,CAASC,MAAd;AACAV,MAAAA,EAAE,GAAGH,EAAE,CAACuB,WAAH,CAAe,OAAf,EAAwB,WAAxB,CAAL;AACArB,MAAAA,KAAK,GAAGC,EAAE,CAACqB,WAAH,CAAe,OAAf,CAAR;;AAEAxB,MAAAA,EAAE,CAACgB,OAAH,GAAa,UAAAL,CAAC,EAAI;AAChBU,QAAAA,MAAM,CAAC,IAAIb,KAAJ,CAAUG,CAAV,CAAD,CAAN;AACD,OAFD;;AAIAO,MAAAA,EAAE,CAACE,OAAD,CAAF;;AAEAjB,MAAAA,EAAE,CAACsB,UAAH,GAAgB,UAAAd,CAAC;AAAA,eAAIX,EAAE,CAAC0B,KAAH,EAAJ;AAAA,OAAjB;AACD,KAZD;AAaD,GAdM,CAAP;AAeD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,WAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuC;AAC5CzB,EAAAA,MAAM;AAEN,SAAOa,SAAS,CAAC,UAAAG,OAAO,EAAI;AAC1B,QAAI,CAACS,SAAL,EAAgB;AACdD,MAAAA,IAAI;AACFE,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADF;AAEFC,QAAAA,IAAI,EAAE;AAFJ,SAGCL,IAHD,CAAJ;AAKD;;AAED,QAAMM,IAAI,GAAGhC,KAAK,CAACiC,GAAN,CAAUP,IAAV,CAAb;;AAEAM,IAAAA,IAAI,CAACZ,SAAL,GAAiB,UAAAX,CAAC,EAAI;AACpBS,MAAAA,OAAO,CAACT,CAAD,CAAP;AACD,KAFD;AAGD,GAde,CAAhB;AAeD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASyB,iBAAT,CAA4BR,IAA5B,EAAkC;AACvCxB,EAAAA,MAAM;AAEN,SAAOa,SAAS,CAAC,UAAAG,OAAO,EAAI;AAC1B,QAAMc,IAAI,GAAGhC,KAAK,CAACiC,GAAN,CAAUP,IAAV,CAAb;;AAEAM,IAAAA,IAAI,CAACZ,SAAL,GAAiB,UAAAX,CAAC,EAAI;AACpBS,MAAAA,OAAO,CAACT,CAAD,CAAP;AACD,KAFD;AAGD,GANe,CAAhB;AAOD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAAS0B,cAAT,GAA2B;AAChCjC,EAAAA,MAAM;AAEN,SAAOa,SAAS,CAAC,UAAAG,OAAO,EAAI;AAC1B,QAAMkB,KAAK,GAAGpC,KAAK,CAACqC,MAAN,EAAd;;AAEAD,IAAAA,KAAK,CAAChB,SAAN,GAAkB,YAAM;AACtBF,MAAAA,OAAO,CAACkB,KAAK,CAACzB,MAAP,CAAP;AACD,KAFD;AAGD,GANe,CAAhB;AAOD;AAED,OAAO,SAAS2B,cAAT,CAAyBV,EAAzB,EAA6B;AAClC1B,EAAAA,MAAM;AAEN,SAAOa,SAAS,CAAC,UAAAG,OAAO,EAAI;AAC1B,QAAMkB,KAAK,GAAGpC,KAAK,CAACuC,GAAN,CAAUX,EAAV,CAAd;;AAEAQ,IAAAA,KAAK,CAAChB,SAAN,GAAkB,YAAM;AACtBF,MAAAA,OAAO,CAACkB,KAAK,CAACzB,MAAP,CAAP;AACD,KAFD;AAGD,GANe,CAAhB;AAOD;AAED,OAAO,SAAS6B,iBAAT,CAA4BZ,EAA5B,EAAgC;AACrC1B,EAAAA,MAAM;AAEN,SAAOa,SAAS,CAAC,UAAAG,OAAO,EAAI;AAC1B,QAAMkB,KAAK,GAAGpC,KAAK,CAACyC,MAAN,CAAab,EAAb,CAAd;;AAEAQ,IAAAA,KAAK,CAAChB,SAAN,GAAkB,YAAM;AACtBF,MAAAA,OAAO,CAACkB,KAAK,CAACzB,MAAP,CAAP;AACD,KAFD;AAGD,GANe,CAAhB;AAOD","sourcesContent":["const dbname = 'mysigmail'\nconst version = 1\nlet db = ''\nlet request = ''\nlet store = ''\nlet tx = ''\n\n/**\n * Open DB\n */\nfunction openDB () {\n  if (!window.indexedDB) {\n    window.alert('Browser not support IndexedDB')\n    throw new Error('Browser not support IndexedDB')\n  }\n\n  request = window.indexedDB.open(dbname, version)\n\n  request.onupgradeneeded = e => {\n    db = e.target.result\n    store = db.createObjectStore('store', { keyPath: 'id' })\n  }\n\n  request.onerror = e => {\n    throw new Error('The database is opened failed')\n    // console.warn('The database is opened failed')\n  }\n}\n\n/**\n * Promisify onsuccess handler of indexedDB\n * @param {function} cb - callback Promise.resolve()\n * @returns {Promise} Promise\n */\nfunction onSuccess (cb) {\n  return new Promise((resolve, reject) => {\n    request.onsuccess = e => {\n      db = e.target.result\n      tx = db.transaction('store', 'readwrite')\n      store = tx.objectStore('store')\n\n      db.onerror = e => {\n        reject(new Error(e))\n      }\n\n      cb(resolve)\n\n      tx.oncomplete = e => db.close()\n    }\n  })\n}\n\n/**\n * Save project\n * @param {object} data - project data\n * @param {boolean} asCurrent - save project as current, set new record in DB\n * with 'currentProject' key\n * @returns {Promise} Promise\n */\nexport function saveProject (data, asCurrent) {\n  openDB()\n\n  return onSuccess(resolve => {\n    if (!asCurrent) {\n      data = {\n        id: new Date().getTime(),\n        name: 'Untitled project',\n        ...data\n      }\n    }\n\n    const save = store.put(data)\n\n    save.onsuccess = e => {\n      resolve(e)\n    }\n  })\n}\n\n/**\n * Update project\n * @param {object} data - project data\n * @returns {Promise} Promise\n */\nexport function updateProjectById (data) {\n  openDB()\n\n  return onSuccess(resolve => {\n    const save = store.put(data)\n\n    save.onsuccess = e => {\n      resolve(e)\n    }\n  })\n}\n\n/**\n * Get all projects\n * @returns {Promise} Promise array of projects\n */\nexport function getAllProjects () {\n  openDB()\n\n  return onSuccess(resolve => {\n    const query = store.getAll()\n\n    query.onsuccess = () => {\n      resolve(query.result)\n    }\n  })\n}\n\nexport function getProjectById (id) {\n  openDB()\n\n  return onSuccess(resolve => {\n    const query = store.get(id)\n\n    query.onsuccess = () => {\n      resolve(query.result)\n    }\n  })\n}\n\nexport function deleteProjectById (id) {\n  openDB()\n\n  return onSuccess(resolve => {\n    const query = store.delete(id)\n\n    query.onsuccess = () => {\n      resolve(query.result)\n    }\n  })\n}\n"]}]}