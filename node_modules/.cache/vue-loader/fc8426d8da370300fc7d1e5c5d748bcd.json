{"remainingRequest":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arqnet/Desktop/tro-emsig/src/components/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arqnet/Desktop/tro-emsig/src/components/Upload.vue","mtime":1566455821000},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js","mtime":1615147414521},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js","mtime":1615147418198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTMyBmcm9tICdhd3Mtc2RrL2NsaWVudHMvczMnCmltcG9ydCB7IGd1aWQgfSBmcm9tICdAL3V0aWwvaGVscGVycycKaW1wb3J0IENyb3BwZXIgZnJvbSAnY3JvcHBlcmpzJwppbXBvcnQgJ2Nyb3BwZXJqcy9kaXN0L2Nyb3BwZXIuY3NzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdVcGxvYWQnLAoKICBwcm9wczogewogICAgY3JvcFdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGNyb3BIZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcXVhbGl0eTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAuOQogICAgfQogIH0sCgogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZVJhdzogJycsCiAgICAgIHNob3dDcm9wRGlhbG9nOiBmYWxzZSwKICAgICAgY3JvcHBlcjogdW5kZWZpbmVkLAogICAgICBhc3BlY3RSYXRpbzogTmFOCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGNyb3BQcmV2aWV3ICgpIHsKICAgICAgaWYgKHRoaXMuZmlsZVJhdykgewogICAgICAgIHJldHVybiBVUkwuY3JlYXRlT2JqZWN0VVJMKHRoaXMuZmlsZVJhdykKICAgICAgfQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIG9uQmVmb3JlVXBsb2FkIChmaWxlKSB7CiAgICAgIHRoaXMuY2hlY2tVcGxvYWRlZEZpbGUoZmlsZSkKICAgIH0sCiAgICBjaGVja1VwbG9hZGVkRmlsZSAoZmlsZSkgewogICAgICBjb25zdCBpc0pQRyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnCiAgICAgIGNvbnN0IGlzUE5HID0gZmlsZS50eXBlID09PSAnaW1hZ2UvcG5nJwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBpZiAoIWlzSlBHICYmICFpc1BORykgewogICAgICAgICAgY29uc3QgbWVzc2FnZSA9ICdVcGxvYWRlZCBmaWxlIHNob3VsZCBiZSBhIC5qcGcgb3IgLnBuZy4nCgogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7IG1lc3NhZ2UsIHR5cGU6ICdlcnJvcicgfSkKICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IobWVzc2FnZSkpCiAgICAgICAgfQoKICAgICAgICByZXNvbHZlKHRydWUpCiAgICAgIH0pCiAgICB9LAogICAgYXN5bmMgb25DaGFuZ2UgKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy5jaGVja1VwbG9hZGVkRmlsZShmaWxlLnJhdykKICAgICAgICB0aGlzLmZpbGVSYXcgPSBmaWxlLnJhdwogICAgICAgIHRoaXMuaW5pdENyb3BwZXIoKQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycikKICAgICAgfQogICAgfSwKICAgIGFzeW5jIG9uVXBsb2FkIChkYXRhKSB7CiAgICAgIGNvbnN0IHVybCA9IGF3YWl0IHRoaXMudXBsb2FkVG9TMygpCiAgICAgIHRoaXMuJGVtaXQoJ3VwbG9hZCcsIHVybCkKICAgICAgdGhpcy5zaG93Q3JvcERpYWxvZyA9IGZhbHNlCiAgICAgIHRoaXMuZmlsZVJhdyA9ICcnCiAgICB9LAogICAgYXN5bmMgdXBsb2FkVG9TMyAoKSB7CiAgICAgIGNvbnN0IGJ1Y2tldCA9IG5ldyBTMyh7CiAgICAgICAgYWNjZXNzS2V5SWQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfQVdTX1MzX0lELAogICAgICAgIHNlY3JldEFjY2Vzc0tleTogcHJvY2Vzcy5lbnYuVlVFX0FQUF9BV1NfUzNfS0VZLAogICAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuVlVFX0FQUF9BV1NfUzNfUkVHSU9OCiAgICAgIH0pCgogICAgICBjb25zdCBuYW1lID0gdGhpcy5maWxlUmF3Lm5hbWUKICAgICAgY29uc3QgZXh0ID0gbmFtZS5tYXRjaCgvLmpwZ3wuanBlZ3wucG5nJC9pKVswXQogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKS50b0pTT04oKS5zdWJzdHIoMCwgMTApCiAgICAgIGNvbnN0IGZpbGUgPSBgJHtkYXRlfS0ke2d1aWQoKX0ke2V4dH1gCiAgICAgIGNvbnN0IGtleSA9IGB1cGxvYWQvJHtmaWxlfWAKICAgICAgY29uc3QgY3JvcHBlZEltYWdlID0gYXdhaXQgdGhpcy5nZXRDcm9wcGVkSW1hZ2UoKQoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBidWNrZXQucHV0T2JqZWN0KHsKICAgICAgICAgIEJ1Y2tldDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9BV1NfUzNfQkFTS0VULAogICAgICAgICAgS2V5OiBrZXksCiAgICAgICAgICBDb250ZW50VHlwZTogdGhpcy5maWxlUmF3LnR5cGUsCiAgICAgICAgICBCb2R5OiBjcm9wcGVkSW1hZ2UuYmxvYgogICAgICAgIH0sIChlcnIsIGRhdGEpID0+IHsKICAgICAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKQogICAgICAgICAgY29uc3QgcmVzID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BV1NfUzNfVVJMICsgJy8nICsga2V5CiAgICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXMpCiAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBjaGFuZ2VBc3BlY3RSYXRpb24gKGFzcGVjdCkgewogICAgICB0aGlzLmFzcGVjdFJhdGlvID0gYXNwZWN0CiAgICAgIHRoaXMuY3JvcHBlci5zZXRBc3BlY3RSYXRpbyh0aGlzLmFzcGVjdFJhdGlvKQogICAgfSwKICAgIGdldENyb3BwZWRJbWFnZSAoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICB0aGlzLmNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcyh7CiAgICAgICAgICB3aWR0aDogdGhpcy5jcm9wV2lkdGgsCiAgICAgICAgICBoZWlnaHQ6IHRoaXMuY3JvcEhlaWdodCwKICAgICAgICAgIGltYWdlU21vb3RoaW5nUXVhbGl0eTogJ21lZGl1bScKICAgICAgICB9KS50b0Jsb2IoYmxvYiA9PiB7CiAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgYmxvYjogYmxvYiwKICAgICAgICAgICAgdXJsOiBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpCiAgICAgICAgICB9KQogICAgICAgIH0sIHRoaXMuZmlsZVJhdy50eXBlLCB0aGlzLnF1YWxpdHkpCiAgICAgIH0pCiAgICB9LAogICAgb3BlbkNyb3BEaWFsb2cgKCkgewogICAgICB0aGlzLnNob3dDcm9wRGlhbG9nID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5pbml0Q3JvcHBlcigpCiAgICAgIH0pCiAgICB9LAogICAgaW5pdENyb3BwZXIgKCkgewogICAgICBpZiAodHlwZW9mIHRoaXMuY3JvcHBlciA9PT0gJ29iamVjdCcpIHsKICAgICAgICB0aGlzLmNyb3BwZXIuZGVzdHJveSgpCiAgICAgIH0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuY3JvcHBlciA9IG5ldyBDcm9wcGVyKHRoaXMuJHJlZnMuY3JvcHBlciwgewogICAgICAgICAgYXNwZWN0UmF0aW86IHRoaXMuYXNwZWN0LAogICAgICAgICAgdmlld01vZGU6IDEsCiAgICAgICAgICBhdXRvQ3JvcEFyZWE6IDEKICAgICAgICB9KQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"upload\">\n    <el-button\n      class=\"upload__btn\"\n      @click=\"openCropDialog\"\n    >Upload image</el-button>\n    <el-dialog\n      title=\"Upload and crop image\"\n      :visible.sync=\"showCropDialog\"\n    >\n      <div class=\"crop-preview-wrapper\">\n        <div\n          v-show=\"cropPreview\"\n          class=\"crop-preview\"\n        >\n          <img\n            ref=\"cropper\"\n            :src=\"cropPreview\"\n            alt=\"crop-preview\"\n          >\n        </div>\n      </div>\n      <el-upload\n        ref=\"upload\"\n        action=\"\"\n        :on-change=\"onChange\"\n        :http-request=\"onUpload\"\n        :before-upload=\"onBeforeUpload\"\n        :multiple=\"false\"\n        :show-file-list=\"false\"\n        :auto-upload=\"false\"\n      >\n        <div slot=\"trigger\">\n          <button\n            ref=\"uploadButton\"\n            style=\"display: none;\"\n          />\n        </div>\n        <div\n          v-if=\"cropPreview\"\n          class=\"aspect-ratio-buttons\"\n        >\n          <el-radio-group\n            v-model=\"aspectRatio\"\n            size=\"mini\"\n            @change=\"changeAspectRation\"\n          >\n            <el-radio-button :label=\"1\">1:1</el-radio-button>\n            <el-radio-button :label=\"4 / 3\">4:3</el-radio-button>\n            <el-radio-button :label=\"2 / 3\">2:3</el-radio-button>\n            <el-radio-button :label=\"16 / 9\">16:9</el-radio-button>\n            <el-radio-button :label=\"NaN\">Free</el-radio-button>\n          </el-radio-group>\n        </div>\n        <div class=\"upload-action\">\n          <el-button @click=\"$refs.uploadButton.click()\">Select image</el-button>\n          <el-button\n            v-if=\"cropPreview\"\n            type=\"success\"\n            @click=\"onUpload\"\n          >Save</el-button>\n        </div>\n      </el-upload>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport S3 from 'aws-sdk/clients/s3'\nimport { guid } from '@/util/helpers'\nimport Cropper from 'cropperjs'\nimport 'cropperjs/dist/cropper.css'\n\nexport default {\n  name: 'Upload',\n\n  props: {\n    cropWidth: {\n      type: Number,\n      default: null\n    },\n    cropHeight: {\n      type: Number,\n      default: null\n    },\n    quality: {\n      type: Number,\n      default: 0.9\n    }\n  },\n\n  data () {\n    return {\n      fileRaw: '',\n      showCropDialog: false,\n      cropper: undefined,\n      aspectRatio: NaN\n    }\n  },\n\n  computed: {\n    cropPreview () {\n      if (this.fileRaw) {\n        return URL.createObjectURL(this.fileRaw)\n      }\n    }\n  },\n\n  methods: {\n    onBeforeUpload (file) {\n      this.checkUploadedFile(file)\n    },\n    checkUploadedFile (file) {\n      const isJPG = file.type === 'image/jpeg'\n      const isPNG = file.type === 'image/png'\n\n      return new Promise((resolve, reject) => {\n        if (!isJPG && !isPNG) {\n          const message = 'Uploaded file should be a .jpg or .png.'\n\n          this.$message({ message, type: 'error' })\n          reject(new Error(message))\n        }\n\n        resolve(true)\n      })\n    },\n    async onChange (file, fileList) {\n      try {\n        await this.checkUploadedFile(file.raw)\n        this.fileRaw = file.raw\n        this.initCropper()\n      } catch (err) {\n        console.error(err)\n      }\n    },\n    async onUpload (data) {\n      const url = await this.uploadToS3()\n      this.$emit('upload', url)\n      this.showCropDialog = false\n      this.fileRaw = ''\n    },\n    async uploadToS3 () {\n      const bucket = new S3({\n        accessKeyId: process.env.VUE_APP_AWS_S3_ID,\n        secretAccessKey: process.env.VUE_APP_AWS_S3_KEY,\n        region: process.env.VUE_APP_AWS_S3_REGION\n      })\n\n      const name = this.fileRaw.name\n      const ext = name.match(/.jpg|.jpeg|.png$/i)[0]\n      const date = new Date().toJSON().substr(0, 10)\n      const file = `${date}-${guid()}${ext}`\n      const key = `upload/${file}`\n      const croppedImage = await this.getCroppedImage()\n\n      return new Promise((resolve, reject) => {\n        bucket.putObject({\n          Bucket: process.env.VUE_APP_AWS_S3_BASKET,\n          Key: key,\n          ContentType: this.fileRaw.type,\n          Body: croppedImage.blob\n        }, (err, data) => {\n          if (err) return reject(err)\n          const res = process.env.VUE_APP_AWS_S3_URL + '/' + key\n          return resolve(res)\n        })\n      })\n    },\n    changeAspectRation (aspect) {\n      this.aspectRatio = aspect\n      this.cropper.setAspectRatio(this.aspectRatio)\n    },\n    getCroppedImage () {\n      return new Promise(resolve => {\n        this.cropper.getCroppedCanvas({\n          width: this.cropWidth,\n          height: this.cropHeight,\n          imageSmoothingQuality: 'medium'\n        }).toBlob(blob => {\n          resolve({\n            blob: blob,\n            url: URL.createObjectURL(blob)\n          })\n        }, this.fileRaw.type, this.quality)\n      })\n    },\n    openCropDialog () {\n      this.showCropDialog = true\n      this.$nextTick(() => {\n        this.initCropper()\n      })\n    },\n    initCropper () {\n      if (typeof this.cropper === 'object') {\n        this.cropper.destroy()\n      }\n      this.$nextTick(() => {\n        this.cropper = new Cropper(this.$refs.cropper, {\n          aspectRatio: this.aspect,\n          viewMode: 1,\n          autoCropArea: 1\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../assets/scss/variables.scss';\n\n.crop-preview-wrapper {\n   overflow: hidden;\n   padding-bottom: 5px;\n}\n.crop-preview {\n  padding: 2px 0;\n  max-height: 250px;\n  padding-bottom: 20px;\n  img {\n     max-width: 100%;\n  }\n  &__placeholder {\n    width: 100%;\n    height: 200px;\n    background-color: #eee;\n    border: 1px dashed $color-info;\n    border-radius: 3px;\n  }\n}\n.upload-action, .aspect-ratio-buttons {\n  text-align: center;\n}\n.aspect-ratio-buttons {\n  margin-bottom: 10px;\n}\n</style>\n"]}]}