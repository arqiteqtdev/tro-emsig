{"remainingRequest":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arqnet/Desktop/tro-emsig/src/components/addons/types/Banner.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/arqnet/Desktop/tro-emsig/src/components/addons/types/Banner.vue","mtime":1566455821000},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/css-loader/dist/cjs.js","mtime":1615148347552},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615147418198},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/postcss-loader/src/index.js","mtime":1615147418333},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/sass-loader/dist/cjs.js","mtime":1615147421818},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js","mtime":1615147418198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmFubmVyIHsKICAudXBsb2FkIHsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgICBwIHsKICAgICAgJjpmaXJzdC1jaGlsZCB7CiAgICAgICAgbWFyZ2luLXRvcDogMDsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Banner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Banner.vue","sourceRoot":"src/components/addons/types","sourcesContent":["<template>\n  <div class=\"banner\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"24\">\n        <upload\n          :crop-width=\"600\"\n          @upload=\"onUpload\"\n        />\n      </el-col>\n      <el-col :span=\"16\">\n        <el-input\n          v-model=\"bannerImage\"\n          placeholder=\"http://\"\n          clearable\n          @clear=\"onClearImageLink\"\n        />\n        <div class=\"desc\">\n          <p>You can upload image or add the public link to image.</p>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-button\n          style=\"width: 100%;\"\n          @click=\"onAddImageLink\"\n        >Add link</el-button>\n      </el-col>\n      <el-col :span=\"24\">\n        <p>Banner linking to</p>\n        <el-input\n          v-model=\"bannerLink\"\n          placeholder=\"http://\"\n          clearable\n        />\n\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Upload from '@/components/Upload'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'Banner',\n\n  components: {\n    Upload\n  },\n\n  data () {\n    return {\n      url: ''\n    }\n  },\n\n  computed: {\n    ...mapState(['addons']),\n    bannerImage: {\n      get () {\n        return this.addons.banner.image\n      },\n      set (v) {\n        this.url = v\n      }\n    },\n    bannerLink: {\n      get () {\n        return this.addons.banner.link\n      },\n      set (v) {\n        this.$store.dispatch('updateBanner', { link: v })\n      }\n    }\n  },\n\n  methods: {\n    onUpload (url) {\n      this.$store.dispatch('updateBanner', { image: url })\n    },\n    onAddImageLink () {\n      this.$store.dispatch('updateBanner', { image: this.url })\n    },\n    onClearImageLink () {\n      this.imageLink = ''\n      this.onAddImageLink()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.banner {\n  .upload {\n    margin-bottom: 20px;\n    p {\n      &:first-child {\n        margin-top: 0;\n      }\n    }\n  }\n}\n</style>\n"]}]}