{"remainingRequest":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arqnet/Desktop/tro-emsig/src/views/Options.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arqnet/Desktop/tro-emsig/src/views/Options.vue","mtime":1566455821000},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/babel-loader/lib/index.js","mtime":1615147414521},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/cache-loader/dist/cjs.js","mtime":1615148347494},{"path":"/Users/arqnet/Desktop/tro-emsig/node_modules/vue-loader/lib/index.js","mtime":1615147418198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnJywKCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ29wdGlvbnMnLCAnYXR0cmlidXRlcycsICdwcm9qZWN0cycsICdiYXNpYyddKSwKICAgIG1haW5Db2xvcjogewogICAgICBnZXQgKCkgewogICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuY29sb3IubWFpbgogICAgICB9LAogICAgICBzZXQgKHYpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlT3B0aW9ucycsIHsgY29sb3I6IHsgbWFpbjogdiB9IH0pCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfQ09MT1InLCB7IG1haW5QcmV2aWV3OiB1bmRlZmluZWQgfSkKICAgICAgfQogICAgfSwKICAgIHNlY29uZGFyeUNvbG9yOiB7CiAgICAgIGdldCAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5jb2xvci5zZWNvbmRhcnkKICAgICAgfSwKICAgICAgc2V0ICh2KSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZU9wdGlvbnMnLCB7IGNvbG9yOiB7IHNlY29uZGFyeTogdiB9IH0pCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfQ09MT1InLCB7IHNlY29uZGFyeVByZXZpZXc6IHVuZGVmaW5lZCB9KQogICAgICB9CiAgICB9LAogICAgZm9udFNpemU6IHsKICAgICAgZ2V0ICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmZvbnQuc2l6ZQogICAgICB9LAogICAgICBzZXQgKHYpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlT3B0aW9ucycsIHsgZm9udDogeyBzaXplOiB2IH0gfSkKICAgICAgfQogICAgfSwKICAgIGZvbnRGYW1pbHk6IHsKICAgICAgZ2V0ICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmZvbnQuZmFtaWx5CiAgICAgIH0sCiAgICAgIHNldCAodikgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1cGRhdGVPcHRpb25zJywgeyBmb250OiB7IGZhbWlseTogdiB9IH0pCiAgICAgIH0KICAgIH0sCiAgICBzaG93QXZhdGFyOiB7CiAgICAgIGdldCAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5hdmF0YXIuc2hvdwogICAgICB9LAogICAgICBzZXQgKHYpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlT3B0aW9ucycsIHsgYXZhdGFyOiB7IHNob3c6IHYgfSB9KQogICAgICB9CiAgICB9LAogICAgYXZhdGFyU2hhcGU6IHsKICAgICAgZ2V0ICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmF2YXRhci5yb3VuZG5lc3MKICAgICAgfSwKICAgICAgc2V0ICh2KSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZU9wdGlvbnMnLCB7IGF2YXRhcjogeyByb3VuZG5lc3M6IHYgfSB9KQogICAgICB9CiAgICB9LAogICAgYXZhdGFyU2l6ZTogewogICAgICBnZXQgKCkgewogICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuYXZhdGFyLnNpemUKICAgICAgfSwKICAgICAgc2V0ICh2KSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZU9wdGlvbnMnLCB7IGF2YXRhcjogeyBzaXplOiB2IH0gfSkKICAgICAgfQogICAgfSwKICAgIHNlcGFyYXRvcjogewogICAgICBnZXQgKCkgewogICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuc2VwYXJhdG9yCiAgICAgIH0sCiAgICAgIHNldCAodikgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1cGRhdGVPcHRpb25zJywgeyBzZXBhcmF0b3I6IHYgfSkKICAgICAgfQogICAgfSwKICAgIGlzSW1hZ2VTcXVhcmUgKCkgewogICAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKQogICAgICBpbWcuc3JjID0gdGhpcy5iYXNpYy5pbWFnZS5saW5rCiAgICAgIHJldHVybiBpbWcud2lkdGggPT09IGltZy5oZWlnaHQKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgJ29wdGlvbnMuY29sb3IubWFpbicgKHYpIHsKICAgICAgaWYgKHYgPT09IG51bGwpIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0NPTE9SJywgeyBtYWluOiAnIzAwMDAwMCcgfSkKICAgIH0sCiAgICAnb3B0aW9ucy5jb2xvci5zZWNvbmRhcnknICh2KSB7CiAgICAgIGlmICh2ID09PSBudWxsKSB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DT0xPUicsIHsgc2Vjb25kYXJ5OiAnIzAwMDAwMCcgfSkKICAgIH0KICB9LAoKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuJGdhLnBhZ2UodGhpcy4kcm91dGVyKQogIH0sCgogIG1vdW50ZWQgKCkgewogICAgdGhpcy5vbkNsb3NlQ29sb3JQaWNrZXIoKQogIH0sCgogIG1ldGhvZHM6IHsKICAgIG9uUHJldmlld01haW5Db2xvciAodikgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DT0xPUicsIHsgbWFpblByZXZpZXc6IHYgfSkKICAgIH0sCiAgICBvblByZXZpZXdTZWNvbmRhcnlDb2xvciAodikgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DT0xPUicsIHsgc2Vjb25kYXJ5UHJldmlldzogdiB9KQogICAgfSwKICAgIHJlc2V0UHJldmlld0NvbG9yICgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfQ09MT1InLCB7IG1haW5QcmV2aWV3OiB1bmRlZmluZWQgfSkKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfQ09MT1InLCB7IHNlY29uZGFyeVByZXZpZXc6IHVuZGVmaW5lZCB9KQogICAgfSwKICAgIG9uQ2xvc2VDb2xvclBpY2tlciAoKSB7CiAgICAgIHRoaXMuJHJlZnMuY29sb3JQaWNrZXIuJGNoaWxkcmVuWzBdLiRvbignaW5wdXQnLCBlID0+IHsKICAgICAgICBpZiAoIWUpIHRoaXMucmVzZXRQcmV2aWV3Q29sb3IoKQogICAgICB9KQogICAgICB0aGlzLiRyZWZzLmNvbG9yUGlja2VyMi4kY2hpbGRyZW5bMF0uJG9uKCdpbnB1dCcsIGUgPT4gewogICAgICAgIGlmICghZSkgdGhpcy5yZXNldFByZXZpZXdDb2xvcigpCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Options.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Options.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"options\">\n    <el-form\n      label-position=\"left\"\n      label-width=\"150px\"\n    >\n      <el-form-item label=\"Main color\">\n        <el-color-picker\n          ref=\"colorPicker\"\n          v-model=\"mainColor\"\n          @active-change=\"onPreviewMainColor\"\n        />\n      </el-form-item>\n      <el-form-item label=\"Secondary color\">\n        <el-color-picker\n          ref=\"colorPicker2\"\n          v-model=\"secondaryColor\"\n          @active-change=\"onPreviewSecondaryColor\"\n        />\n      </el-form-item>\n      <el-form-item label=\"Avatar\">\n        <el-switch v-model=\"showAvatar\" />\n      </el-form-item>\n      <el-collapse-transition>\n        <div v-if=\"showAvatar\">\n          <el-form-item label=\"Avatar size\">\n            <el-slider\n              v-model=\"avatarSize\"\n              :min=\"attributes.avatar.min\"\n              :max=\"attributes.avatar.max\"\n            />\n          </el-form-item>\n          <el-form-item label=\"Avatar shape\">\n            <el-select v-model=\"avatarShape\">\n              <el-option\n                v-for=\"item in attributes.avatar.roundness\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n                :disabled=\"item.label ==='Round' && !isImageSquare\"\n              />\n            </el-select>\n          </el-form-item>\n        </div>\n      </el-collapse-transition>\n      <el-form-item label=\"Font family\">\n        <el-select v-model=\"fontFamily\">\n          <el-option-group\n            v-for=\"group in attributes.font.family\"\n            :key=\"group.value\"\n            :label=\"group.label\"\n          >\n            <el-option\n              v-for=\"item in group.options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-option-group>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Font size\">\n        <el-select v-model=\"fontSize\">\n          <el-option\n            v-for=\"item in attributes.font.size\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Job separator\">\n        <el-select v-model=\"separator\">\n          <el-option\n            v-for=\"item in attributes.separator.options\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: '',\n\n  data () {\n    return {\n    }\n  },\n\n  computed: {\n    ...mapState(['options', 'attributes', 'projects', 'basic']),\n    mainColor: {\n      get () {\n        return this.options.color.main\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { color: { main: v } })\n        this.$store.commit('SET_COLOR', { mainPreview: undefined })\n      }\n    },\n    secondaryColor: {\n      get () {\n        return this.options.color.secondary\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { color: { secondary: v } })\n        this.$store.commit('SET_COLOR', { secondaryPreview: undefined })\n      }\n    },\n    fontSize: {\n      get () {\n        return this.options.font.size\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { font: { size: v } })\n      }\n    },\n    fontFamily: {\n      get () {\n        return this.options.font.family\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { font: { family: v } })\n      }\n    },\n    showAvatar: {\n      get () {\n        return this.options.avatar.show\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { avatar: { show: v } })\n      }\n    },\n    avatarShape: {\n      get () {\n        return this.options.avatar.roundness\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { avatar: { roundness: v } })\n      }\n    },\n    avatarSize: {\n      get () {\n        return this.options.avatar.size\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { avatar: { size: v } })\n      }\n    },\n    separator: {\n      get () {\n        return this.options.separator\n      },\n      set (v) {\n        this.$store.dispatch('updateOptions', { separator: v })\n      }\n    },\n    isImageSquare () {\n      const img = document.createElement('img')\n      img.src = this.basic.image.link\n      return img.width === img.height\n    }\n  },\n\n  watch: {\n    'options.color.main' (v) {\n      if (v === null) this.$store.commit('SET_COLOR', { main: '#000000' })\n    },\n    'options.color.secondary' (v) {\n      if (v === null) this.$store.commit('SET_COLOR', { secondary: '#000000' })\n    }\n  },\n\n  created () {\n    this.$ga.page(this.$router)\n  },\n\n  mounted () {\n    this.onCloseColorPicker()\n  },\n\n  methods: {\n    onPreviewMainColor (v) {\n      this.$store.commit('SET_COLOR', { mainPreview: v })\n    },\n    onPreviewSecondaryColor (v) {\n      this.$store.commit('SET_COLOR', { secondaryPreview: v })\n    },\n    resetPreviewColor () {\n      this.$store.commit('SET_COLOR', { mainPreview: undefined })\n      this.$store.commit('SET_COLOR', { secondaryPreview: undefined })\n    },\n    onCloseColorPicker () {\n      this.$refs.colorPicker.$children[0].$on('input', e => {\n        if (!e) this.resetPreviewColor()\n      })\n      this.$refs.colorPicker2.$children[0].$on('input', e => {\n        if (!e) this.resetPreviewColor()\n      })\n    }\n  }\n}\n</script>\n\n<style label=\"scss\">\n.options {\n  margin-top: 30px;\n}\n</style>\n"]}]}